<%- include('../partials/header.ejs') %>

<div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-8">
        <h1 class="text-3xl font-bold text-primary">Admin Analytics Dashboard</h1>
        <div class="text-gray-600 dark:text-gray-400">Last 6 months of data</div>
    </div>

    <!-- Overview Stats -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 flex items-center space-x-4">
            <span class="material-icons text-primary text-4xl">people</span>
            <div>
                <h3 class="text-2xl font-bold mb-1"><%= stats.totalUsers %></h3>
                <p class="text-gray-600 dark:text-gray-400">Total Users</p>
                <small class="text-gray-500 dark:text-gray-500"><%= stats.userStats.totalPublicProfiles %> public profiles</small>
            </div>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 flex items-center space-x-4">
            <span class="material-icons text-primary text-4xl">album</span>
            <div>
                <h3 class="text-2xl font-bold mb-1"><%= stats.totalRecords %></h3>
                <p class="text-gray-600 dark:text-gray-400">Total Records</p>
                <small class="text-gray-500 dark:text-gray-500">~<%= Math.round(stats.userStats.avgRecordsPerUser) %> per user</small>
            </div>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 flex items-center space-x-4">
            <span class="material-icons text-primary text-4xl">play_circle</span>
            <div>
                <h3 class="text-2xl font-bold mb-1"><%= stats.totalPlays %></h3>
                <p class="text-gray-600 dark:text-gray-400">Total Plays</p>
                <small class="text-gray-500 dark:text-gray-500">~<%= Math.round(stats.totalPlays / stats.totalRecords) %> per record</small>
            </div>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 flex items-center space-x-4">
            <span class="material-icons text-primary text-4xl">trending_up</span>
            <div>
                <h3 class="text-2xl font-bold mb-1"><%= stats.userStats.maxRecordsPerUser %></h3>
                <p class="text-gray-600 dark:text-gray-400">Largest Collection</p>
                <small class="text-gray-500 dark:text-gray-500">records in one collection</small>
            </div>
        </div>
    </div>

    <!-- Growth Charts -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">User Growth</h2>
            <div class="h-[300px]">
                <canvas id="userGrowthChart"></canvas>
            </div>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">Record Growth</h2>
            <div class="h-[300px]">
                <canvas id="recordGrowthChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Genre Analysis -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">Top Genres</h2>
            <div class="h-[300px]">
                <canvas id="genresChart"></canvas>
            </div>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">Genre Trends</h2>
            <div class="h-[300px]">
                <canvas id="genreTrendsChart"></canvas>
            </div>
        </div>
    </div>

    <!-- User Engagement -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">Most Active Users</h2>
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-gray-50 dark:bg-gray-700">
                        <tr>
                            <th class="px-4 py-2 text-left text-gray-600 dark:text-gray-300">User</th>
                            <th class="px-4 py-2 text-left text-gray-600 dark:text-gray-300">Records</th>
                            <th class="px-4 py-2 text-left text-gray-600 dark:text-gray-300">Total Plays</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
                        <% stats.activeUsers.forEach(user => { %>
                            <tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
                                <td class="px-4 py-2"><%= user.username %></td>
                                <td class="px-4 py-2"><%= user.recordCount %></td>
                                <td class="px-4 py-2"><%= user.totalPlays %></td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">Most Popular Records</h2>
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-gray-50 dark:bg-gray-700">
                        <tr>
                            <th class="px-4 py-2 text-left text-gray-600 dark:text-gray-300">Title</th>
                            <th class="px-4 py-2 text-left text-gray-600 dark:text-gray-300">Artist</th>
                            <th class="px-4 py-2 text-left text-gray-600 dark:text-gray-300">Owner</th>
                            <th class="px-4 py-2 text-left text-gray-600 dark:text-gray-300">Plays</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
                        <% stats.popularRecords.forEach(record => { %>
                            <tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
                                <td class="px-4 py-2"><%= record.title %></td>
                                <td class="px-4 py-2"><%= record.artist %></td>
                                <td class="px-4 py-2"><%= record.owner.username %></td>
                                <td class="px-4 py-2"><%= record.plays %></td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Recent Activity -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
        <h2 class="text-xl font-semibold mb-4">Recent Activity</h2>
        <div class="space-y-4 max-h-[500px] overflow-y-auto">
            <% stats.userActivity.forEach(activity => { %>
                <div class="flex items-start space-x-4 p-4 border-b dark:border-gray-700 last:border-0">
                    <div class="text-primary">
                        <span class="material-icons">
                            <% if (activity.activityType === 'play_record') { %>
                                play_circle
                            <% } else if (activity.activityType === 'comment') { %>
                                comment
                            <% } else if (activity.activityType === 'update') { %>
                                edit
                            <% } else { %>
                                info
                            <% } %>
                        </span>
                    </div>
                    <div class="flex-1">
                        <div class="text-gray-900 dark:text-gray-100">
                            <span class="font-semibold"><%= activity.user.username %></span>
                            <%= activity.activityType.replace('_', ' ') %>
                        </div>
                        <div class="text-sm text-gray-500 dark:text-gray-400">
                            <%= new Date(activity.createdAt).toLocaleString() %>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // User Growth Chart
    new Chart(document.getElementById('userGrowthChart').getContext('2d'), {
        type: 'line',
        data: {
            labels: JSON.parse('<%- JSON.stringify(stats.userGrowth.map(d => `${d._id.year}-${d._id.month}`)) %>'),
            datasets: [{
                label: 'New Users',
                data: JSON.parse('<%- JSON.stringify(stats.userGrowth.map(d => d.count)) %>'),
                borderColor: '#26a69a',
                tension: 0.1,
                fill: true,
                backgroundColor: 'rgba(38, 166, 154, 0.1)'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        precision: 0
                    }
                }
            }
        }
    });

    // Record Growth Chart
    new Chart(document.getElementById('recordGrowthChart').getContext('2d'), {
        type: 'line',
        data: {
            labels: JSON.parse('<%- JSON.stringify(stats.recordGrowth.map(d => `${d._id.year}-${d._id.month}`)) %>'),
            datasets: [{
                label: 'New Records',
                data: JSON.parse('<%- JSON.stringify(stats.recordGrowth.map(d => d.count)) %>'),
                borderColor: '#ef5350',
                tension: 0.1,
                fill: true,
                backgroundColor: 'rgba(239, 83, 80, 0.1)'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        precision: 0
                    }
                }
            }
        }
    });

    // Genres Chart
    new Chart(document.getElementById('genresChart').getContext('2d'), {
        type: 'bar',
        data: {
            labels: JSON.parse('<%- JSON.stringify(stats.topGenres.map(g => g._id)) %>'),
            datasets: [{
                label: 'Records per Genre',
                data: JSON.parse('<%- JSON.stringify(stats.topGenres.map(g => g.count)) %>'),
                backgroundColor: '#26a69a'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        precision: 0
                    }
                }
            }
        }
    });

    // Genre Trends Chart
    const genreData = JSON.parse('<%- JSON.stringify(stats.genreDistribution) %>');
    const months = [...new Set(genreData.map(d => `${d._id.year}-${d._id.month}`))].sort();
    const genres = [...new Set(genreData.map(d => d._id.genre))];
    
    const datasets = genres.map(genre => {
        const data = months.map(month => {
            const entry = genreData.find(d => 
                d._id.year + '-' + d._id.month === month && 
                d._id.genre === genre
            );
            return entry ? entry.count : 0;
        });
        
        return {
            label: genre,
            data: data,
            borderColor: `hsl(${Math.random() * 360}, 70%, 50%)`,
            tension: 0.1
        };
    });

    new Chart(document.getElementById('genreTrendsChart').getContext('2d'), {
        type: 'line',
        data: {
            labels: months,
            datasets: datasets
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            interaction: {
                mode: 'index',
                intersect: false
            },
            plugins: {
                legend: {
                    position: 'right'
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        precision: 0
                    }
                }
            }
        }
    });
});
</script>

<%- include('../partials/footer.ejs') %>
