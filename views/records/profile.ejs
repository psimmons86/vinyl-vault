<%- include('../partials/header.ejs') %>

<!-- Profile Banner -->
<div 
  class="profile-banner"
  data-banner-url="<%= encodeURI((user.profile?.bannerUrl || '/images/default-banner.jpg').replace(/\\/g, '/')) %>"
>
  <div class="banner-overlay"></div>
</div>

<div class="container">
  <!-- Profile Header -->
  <div class="row profile-header-row">
    <div class="col s12">
      <div class="card z-depth-0 profile-card">
        <div class="card-content">
          <div class="row valign-wrapper">
            <!-- Profile Avatar -->
            <div class="col s12 m4 center-align">
              <img
                src="<%= user.profile?.avatarUrl || '/images/default-avatar.png' %>"
                alt="<%= user.profile?.name || user.username %>'s profile picture"
                class="circle responsive-img profile-avatar"
                onerror="this.src='/images/default-avatar.png'"
              />
            </div>
            
            <!-- Profile Info -->
            <div class="col s12 m8">
              <div class="profile-header-top">
                <h2 class="profile-name">
                  <%= user.profile?.name || user.username %>
                </h2>
                
                <% if (user._id.toString() === currentUser?._id.toString()) { %>
                  <div class="profile-actions">
                    <a href="/records/settings" class="btn-floating waves-effect waves-light">
                      <i class="material-icons">edit</i>
                    </a>
                    
                    <!-- Theme Toggle -->
                    <button 
                      class="btn-floating waves-effect waves-light theme-toggle"
                      onclick="toggleTheme()"
                      title="Toggle theme"
                    >
                      <i class="material-icons">
                        <%= user.profile?.theme === 'dark' ? 'light_mode' : 'dark_mode' %>
                      </i>
                    </button>

                    <!-- Privacy Toggle -->
                    <button 
                      class="btn-floating waves-effect waves-light privacy-toggle"
                      onclick="togglePrivacy()"
                      title="<%= user.isPublic ? 'Make profile private' : 'Make profile public' %>"
                    >
                      <i class="material-icons">
                        <%= user.isPublic ? 'public' : 'lock' %>
                      </i>
                    </button>

                    <!-- Stats Visibility Toggle -->
                    <button 
                      class="btn-floating waves-effect waves-light stats-toggle"
                      onclick="toggleStats()"
                      title="<%= user.profile?.showStats ? 'Hide stats' : 'Show stats' %>"
                    >
                      <i class="material-icons">
                        <%= user.profile?.showStats ? 'visibility' : 'visibility_off' %>
                      </i>
                    </button>

                    <% if (user.isAdmin) { %>
                      <!-- Admin Analytics Link -->
                      <a 
                        href="/admin/analytics" 
                        class="btn-floating waves-effect waves-light red"
                        title="Admin Analytics"
                      >
                        <i class="material-icons">analytics</i>
                      </a>
                    <% } %>
                  </div>
                <% } %>
              </div>

              <!-- Location -->
              <% if (user.profile?.location) { %>
                <p class="profile-location">
                  <i class="material-icons tiny">location_on</i>
                  <%= user.profile.location %>
                </p>
              <% } %>

              <!-- Bio -->
              <% if (user.profile?.bio) { %>
                <p class="profile-bio"><%= user.profile.bio %></p>
              <% } %>

              <!-- Social Links -->
              <div class="social-links">
                <% if (user.profile?.socialLinks?.discogs) { %>
                  <a
                    href="<%= user.profile.socialLinks.discogs %>"
                    target="_blank"
                    rel="noopener noreferrer"
                    class="btn-floating waves-effect waves-light"
                    title="Discogs Profile"
                  >
                    <i class="material-icons">album</i>
                  </a>
                <% } %>

                <% if (user.profile?.socialLinks?.instagram) { %>
                  <a
                    href="<%= user.profile.socialLinks.instagram %>"
                    target="_blank"
                    rel="noopener noreferrer"
                    class="btn-floating waves-effect waves-light"
                    title="Instagram Profile"
                  >
                    <i class="material-icons">photo_camera</i>
                  </a>
                <% } %>

                <% if (user.profile?.socialLinks?.twitter) { %>
                  <a
                    href="<%= user.profile.socialLinks.twitter %>"
                    target="_blank"
                    rel="noopener noreferrer"
                    class="btn-floating waves-effect waves-light"
                    title="Twitter Profile"
                  >
                    <i class="material-icons">trending_up</i>
                  </a>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Favorite Genres -->
  <% if (user.profile?.favoriteGenres?.length > 0) { %>
    <div class="row">
      <div class="col s12">
        <div class="card">
          <div class="card-content">
            <span class="card-title">Favorite Genres</span>
            <div class="genres-container">
              <% user.profile.favoriteGenres.forEach(genre => { %>
                <div class="chip"><%= genre %></div>
              <% }); %>
            </div>
          </div>
        </div>
      </div>
    </div>
  <% } %>

  <!-- Stats Summary -->
  <div class="row stats-row <%= !user.profile?.showStats ? 'hidden' : '' %>" id="stats-section">
    <div class="col s12 m3">
      <div class="card-panel center-align hoverable">
        <h3 class="stat-number"><%= totalRecords || 0 %></h3>
        <p class="stat-label">Records</p>
      </div>
    </div>
    <div class="col s12 m3">
      <div class="card-panel center-align hoverable">
        <h3 class="stat-number"><%= totalPlays || 0 %></h3>
        <p class="stat-label">Total Plays</p>
      </div>
    </div>
    <div class="col s12 m3">
      <div class="card-panel center-align hoverable">
        <h3 class="stat-number"><%= user.followers?.length || 0 %></h3>
        <p class="stat-label">Followers</p>
      </div>
    </div>
    <div class="col s12 m3">
      <div class="card-panel center-align hoverable">
        <h3 class="stat-number"><%= user.following?.length || 0 %></h3>
        <p class="stat-label">Following</p>
      </div>
    </div>
  </div>

  <!-- Collection Stats -->
  <div class="row">
    <div class="col s12">
      <div class="card">
        <div class="card-content">
          <span class="card-title">Collection Stats</span>
          
          <!-- Genre Distribution -->
          <div class="section">
            <h6>Genre Distribution</h6>
            <div class="collection">
              <% Object.entries(genreDistribution)
                  .sort((a, b) => b[1] - a[1])
                  .slice(0, 5)
                  .forEach(([genre, count]) => { %>
                <div class="collection-item">
                  <span class="title"><%= genre %></span>
                  <span class="secondary-content"><%= count %> records</span>
                  <div class="progress">
                    <div class="determinate" style="width: <%= (count / totalRecords * 100) %>%"></div>
                  </div>
                </div>
              <% }); %>
            </div>
          </div>

          <!-- Decade Distribution -->
          <div class="section">
            <h6>Decade Distribution</h6>
            <div class="collection">
              <% Object.entries(decadeDistribution)
                  .sort((a, b) => a[0].localeCompare(b[0]))
                  .forEach(([decade, count]) => { %>
                <div class="collection-item">
                  <span class="title"><%= decade %></span>
                  <span class="secondary-content"><%= count %> records</span>
                  <div class="progress">
                    <div class="determinate" style="width: <%= (count / totalRecords * 100) %>%"></div>
                  </div>
                </div>
              <% }); %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Featured Post -->
  <% if (featuredPost) { %>
    <div class="row">
      <div class="col s12">
        <div class="card">
          <div class="card-content">
            <span class="card-title">Featured Post</span>
            <div class="featured-post">
              <% if (featuredPost.imageUrl) { %>
                <img src="<%= featuredPost.imageUrl %>" alt="Featured post image" class="responsive-img">
              <% } %>
              <p class="flow-text"><%= featuredPost.content %></p>
              <% if (featuredPost.recordRef) { %>
                <div class="record-reference">
                  <img 
                    src="<%= featuredPost.recordRef.imageUrl || '/images/default-album.png' %>" 
                    alt="<%= featuredPost.recordRef.title %>"
                    class="circle"
                  >
                  <div class="record-info">
                    <span class="title"><%= featuredPost.recordRef.title %></span>
                    <p><%= featuredPost.recordRef.artist %></p>
                  </div>
                </div>
              <% } %>
              <div class="post-stats">
                <span><i class="material-icons">favorite</i> <%= featuredPost.likes?.length || 0 %></span>
                <span><i class="material-icons">comment</i> <%= featuredPost.comments?.length || 0 %></span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  <% } %>

  <!-- Top 8 Records -->
  <% if (user.profile?.top8Records?.length > 0) { %>
    <div class="row">
      <div class="col s12">
        <h4 class="section-title">Top 8 Records</h4>
        <div class="row top-8-grid">
          <% top8Records.forEach(record => { %>
            <div class="col s6 m3">
              <div class="card hoverable">
                <div class="card-image">
                  <img
                    src="<%= record.imageUrl || '/images/default-album.png' %>"
                    alt="<%= record.title %> by <%= record.artist %>"
                    class="responsive-img"
                    onerror="this.src='/images/default-album.png'"
                  />
                  <div class="card-overlay">
                    <h5 class="truncate"><%= record.title %></h5>
                    <p class="truncate"><%= record.artist %></p>
                  </div>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      </div>
    </div>
  <% } %>

  <!-- Recent Activity Section -->
  <div class="row">
    <div class="col s12 m6">
      <div class="card">
        <div class="card-content">
          <span class="card-title">Recently Added</span>
          <div class="collection">
            <% recentlyAdded.forEach(record => { %>
              <a href="/records/<%= record._id %>" class="collection-item avatar">
                <img src="<%= record.imageUrl || '/images/default-album.png' %>" alt="<%= record.title %>" class="circle">
                <span class="title"><%= record.title %></span>
                <p>
                  <%= record.artist %><br>
                  <small class="grey-text">Added <%= new Date(record.createdAt).toLocaleDateString() %></small>
                </p>
                <span class="secondary-content">
                  <i class="material-icons">chevron_right</i>
                </span>
              </a>
            <% }); %>
          </div>
        </div>
      </div>
    </div>

    <div class="col s12 m6">
      <div class="card">
        <div class="card-content">
          <span class="card-title">Recently Played</span>
          <div class="collection">
            <% recentlyPlayed.forEach(record => { %>
              <a href="/records/<%= record._id %>" class="collection-item avatar">
                <img src="<%= record.imageUrl || '/images/default-album.png' %>" alt="<%= record.title %>" class="circle">
                <span class="title"><%= record.title %></span>
                <p>
                  <%= record.artist %><br>
                  <small class="grey-text">Played <%= new Date(record.lastPlayed).toLocaleDateString() %></small>
                </p>
                <span class="secondary-content">
                  <i class="material-icons">chevron_right</i>
                </span>
              </a>
            <% }); %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Social Feed Section -->
  <div class="row">
    <div class="col s12">
      <div class="card">
        <div class="card-content">
          <div class="card-title">Social Feed</div>
          <div id="social-feed-root"></div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- React Dependencies -->
<script src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

<!-- React Components -->
<script type="text/babel" src="/javascripts/components/SocialFeed.jsx"></script>

<!-- Mount React Social Feed Component -->
<script type="text/babel">
  try {
    const container = document.getElementById('social-feed-root');
    if (container) {
      const root = ReactDOM.createRoot(container);
      const props = {
        currentUser: JSON.parse('<%- JSON.stringify(currentUser) %>')
      };
      root.render(React.createElement(window.SocialFeed, props));
    } else {
      console.error('Social feed root element not found');
    }
  } catch (error) {
    console.error('Error mounting Social Feed component:', error);
  }
</script>

<!-- Social Feed Styles -->
<link rel="stylesheet" href="/stylesheets/social.css">

<!-- AJAX Functions -->
<script>
  async function togglePrivacy() {
    try {
      const response = await fetch('/api/profile/privacy', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      
      if (response.ok) {
        const data = await response.json();
        const icon = document.querySelector('.privacy-toggle i');
        icon.textContent = data.isPublic ? 'public' : 'lock';
        
        // Update button title
        const button = document.querySelector('.privacy-toggle');
        button.title = data.isPublic ? 'Make profile private' : 'Make profile public';
        
        M.toast({html: `Profile is now ${data.isPublic ? 'public' : 'private'}`});
      }
    } catch (error) {
      console.error('Error toggling privacy:', error);
      M.toast({html: 'Error updating privacy settings'});
    }
  }

  async function toggleStats() {
    try {
      const response = await fetch('/api/profile/stats', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      
      if (response.ok) {
        const data = await response.json();
        const icon = document.querySelector('.stats-toggle i');
        icon.textContent = data.showStats ? 'visibility' : 'visibility_off';
        
        // Update button title
        const button = document.querySelector('.stats-toggle');
        button.title = data.showStats ? 'Hide stats' : 'Show stats';
        
        // Toggle stats section visibility
        const statsSection = document.getElementById('stats-section');
        statsSection.classList.toggle('hidden', !data.showStats);
        
        M.toast({html: `Stats are now ${data.showStats ? 'visible' : 'hidden'}`});
      }
    } catch (error) {
      console.error('Error toggling stats:', error);
      M.toast({html: 'Error updating stats visibility'});
    }
  }

  function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    fetch('/api/profile/theme', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ theme: newTheme })
    })
    .then(response => response.json())
    .then(data => {
      document.documentElement.setAttribute('data-theme', data.theme);
      const icon = document.querySelector('.theme-toggle i');
      icon.textContent = data.theme === 'dark' ? 'light_mode' : 'dark_mode';
      M.toast({html: `Theme switched to ${data.theme} mode`});
    })
    .catch(error => {
      console.error('Error toggling theme:', error);
      M.toast({html: 'Error updating theme'});
    });
  }
</script>

<!-- Profile Styles -->
<link rel="stylesheet" href="/stylesheets/profile.css">

<!-- Set Banner Image -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const banner = document.querySelector('.profile-banner');
    if (banner) {
      const url = banner.getAttribute('data-banner-url');
      banner.style.backgroundImage = `url('${url}')`;
    }
  });
</script>

<%- include('../partials/footer.ejs') %>
