<%- include('../../partials/header') %>

<div class="container section">
    <div class="row">
        <div class="col s12">
            <div class="card-panel">
                <div class="header-section">
                    <h4>Heavy Rotation</h4>
                    <div class="action-buttons">
                        <a class="btn waves-effect waves-light blue modal-trigger" 
                           href="#addRecordModal">
                            <i class="fas fa-plus left"></i> Add Record
                        </a>
                        <a class="btn waves-effect waves-light green modal-trigger" 
                           href="#searchDiscogsModal">
                            <i class="fas fa-search left"></i> Search Discogs
                        </a>
                    </div>
                </div>

                <% if (featured && featured.length > 0) { %>
                    <div class="featured-records">
                        <div class="records-grid">
                            <% featured.forEach(record => { %>
                                <div class="record-card" data-record-id="<%= record._id %>">
                                    <div class="record-image">
                                        <img src="<%= record.albumArt %>" alt="<%= record.title %>">
                                    </div>
                                    <div class="record-content">
                                        <div class="record-header">
                                            <span class="record-title truncate"><%= record.title %></span>
                                            <p class="record-artist truncate"><%= record.artist %></p>
                                        </div>
                                        <% if (record.description) { %>
                                            <p class="record-description"><%= record.description %></p>
                                        <% } %>
                                        <% if (record.link) { %>
                                            <p class="record-link">
                                                <a href="<%= record.link %>" target="_blank" class="blue-text">
                                                    <i class="fas fa-external-link-alt"></i> View Record
                                                </a>
                                            </p>
                                        <% } %>
                                        <div class="record-actions">
                                            <div class="order-controls">
                                                <div class="input-field">
                                                    <select class="order-select" 
                                                            data-record-id="<%= record._id %>">
                                                        <% for(let i = 1; i <= 5; i++) { %>
                                                            <option value="<%= i %>" 
                                                                    <%= record.order === i ? 'selected' : '' %>>
                                                                Position <%= i %>
                                                            </option>
                                                        <% } %>
                                                    </select>
                                                    <label>Display Order</label>
                                                </div>
                                            </div>
                                            <div class="action-buttons">
                                                <button class="btn-flat waves-effect waves-blue edit-btn" 
                                                        data-record-id="<%= record._id %>"
                                                        data-title="<%= record.title %>"
                                                        data-artist="<%= record.artist %>"
                                                        data-description="<%= record.description || '' %>"
                                                        data-link="<%= record.link || '' %>"
                                                        data-order="<%= record.order %>">
                                                    <i class="fas fa-edit blue-text"></i>
                                                </button>
                                                <button class="btn-flat waves-effect waves-red remove-btn" 
                                                        data-record-id="<%= record._id %>">
                                                    <i class="fas fa-trash red-text"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                <% } else { %>
                    <div class="card-panel">
                        <p>No featured records yet. Add up to 5 records to display in the Heavy Rotation section.</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Record Modal -->
<div id="addRecordModal" class="modal">
    <form action="/blog/admin/featured" method="POST" enctype="multipart/form-data" id="featuredForm">
        <input type="hidden" name="_method" id="formMethod" value="POST">
        <input type="hidden" name="recordId" id="recordId" value="">
        <div class="modal-content">
            <h4 id="modalTitle">Add Featured Record</h4>
            
            <div class="row">
                <div class="input-field col s12">
                    <input type="text" id="title" name="title" required>
                    <label for="title">Album Title</label>
                </div>

                <div class="input-field col s12">
                    <input type="text" id="artist" name="artist" required>
                    <label for="artist">Artist</label>
                </div>

                <div class="file-field input-field col s12">
                    <div class="btn blue">
                        <span>Album Art</span>
                        <input type="file" name="albumArt" accept="image/*" id="albumArt">
                    </div>
                    <div class="file-path-wrapper">
                        <input class="file-path validate" type="text">
                    </div>
                </div>

                <div class="input-field col s12">
                    <textarea id="description" name="description" 
                              class="materialize-textarea"></textarea>
                    <label for="description">Description (optional)</label>
                </div>

                <div class="input-field col s12">
                    <input type="url" id="link" name="link">
                    <label for="link">Link to Record (optional)</label>
                </div>

                <div class="input-field col s12">
                    <select name="order" id="orderSelect">
                        <% for(let i = 1; i <= 5; i++) { %>
                            <option value="<%= i %>">Position <%= i %></option>
                        <% } %>
                    </select>
                    <label>Display Order</label>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="submit" class="btn waves-effect waves-light blue">
                <i class="fas fa-save left"></i> <span id="submitText">Add Record</span>
            </button>
            <a href="#!" class="modal-close waves-effect waves-green btn-flat">Cancel</a>
        </div>
    </form>
</div>

<!-- Search Discogs Modal -->
<div id="searchDiscogsModal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h4>Search Discogs</h4>
        
        <div class="row">
            <form id="discogsSearchForm" class="col s12">
                <div class="input-field">
                    <input type="text" id="discogsQuery" required>
                    <label for="discogsQuery">Search for albums</label>
                </div>
                <button type="submit" class="btn waves-effect waves-light blue">
                    <i class="fas fa-search left"></i> Search
                </button>
            </form>
        </div>
        
        <div id="searchResults" class="row">
            <!-- Search results will be displayed here -->
        </div>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Close</a>
    </div>
</div>

<style>
.header-section {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
}

.header-section .action-buttons {
    display: flex;
    gap: 0.5rem;
}

.featured-records {
    margin-top: 2rem;
}

.records-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
}

.record-card {
    background: var(--bg-surface);
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    transition: transform 0.2s ease;
    display: flex;
    flex-direction: column;
}

.record-card:hover {
    transform: translateY(-4px);
}

.record-image {
    position: relative;
    padding-top: 100%;
    overflow: hidden;
}

.record-image img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.record-content {
    padding: 1rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}

.record-header {
    margin-bottom: 1rem;
}

.record-title {
    font-size: 1.2rem;
    font-weight: 500;
    display: block;
    margin-bottom: 0.25rem;
    color: var(--text-primary);
}

.record-artist {
    color: var(--text-secondary);
    font-size: 1rem;
    margin: 0;
}

.record-description {
    font-size: 0.9rem;
    margin: 0.5rem 0;
    color: var(--text-secondary);
}

.record-link {
    margin: 0.5rem 0;
}

.record-actions {
    margin-top: auto;
    border-top: 1px solid var(--border-color);
    padding-top: 1rem;
}

.order-controls {
    margin-bottom: 1rem;
}

.action-buttons {
    display: flex;
    justify-content: flex-end;
    gap: 0.5rem;
}

/* Discogs search results styling */
#searchResults .col {
    margin-bottom: 15px;
}

.search-result-card {
    display: flex;
    background-color: #f5f5f5;
    border-radius: 4px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    height: 100%;
    padding: 15px;
}

.dark-mode .search-result-card {
    background-color: #333;
}

.search-result-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 4px;
    margin-right: 15px;
}

.search-result-info {
    flex: 1;
    display: flex;
    flex-direction: column;
}

.search-result-title {
    font-size: 1.1rem;
    font-weight: 500;
    margin: 0 0 5px 0;
    color: #333;
}

.dark-mode .search-result-title {
    color: #fff;
}

.search-result-artist {
    font-size: 0.9rem;
    color: #666;
    margin: 0 0 5px 0;
}

.dark-mode .search-result-artist {
    color: #aaa;
}

.search-result-year {
    font-size: 0.8rem;
    color: #999;
    margin: 0 0 10px 0;
}

.search-result-info .btn {
    margin-top: auto;
    align-self: flex-start;
}

@media (max-width: 992px) {
    .records-grid {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (max-width: 600px) {
    .header-section {
        flex-direction: column;
        gap: 1rem;
        align-items: flex-start;
    }
    
    .header-section .action-buttons {
        width: 100%;
        justify-content: space-between;
    }
    
    .records-grid {
        grid-template-columns: 1fr;
    }
    
    .record-actions {
        flex-direction: column;
    }
    
    .order-controls {
        width: 100%;
    }
    
    .action-buttons {
        width: 100%;
        justify-content: space-between;
        margin-top: 0.5rem;
    }
    
    .modal {
        width: 95%;
    }
    
    .search-result-card {
        flex-direction: column;
    }
    
    .search-result-image {
        width: 100%;
        height: 120px;
        margin-right: 0;
        margin-bottom: 10px;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize Materialize components
    const modals = document.querySelectorAll('.modal');
    M.Modal.init(modals);
    
    const selects = document.querySelectorAll('select');
    M.FormSelect.init(selects);
    
    const textareas = document.querySelectorAll('.materialize-textarea');
    textareas.forEach(textarea => M.textareaAutoResize(textarea));

    const form = document.getElementById('featuredForm');
    const modalTitle = document.getElementById('modalTitle');
    const submitText = document.getElementById('submitText');
    const formMethod = document.getElementById('formMethod');
    const recordIdInput = document.getElementById('recordId');
    const albumArtInput = document.getElementById('albumArt');
    const discogsSearchForm = document.getElementById('discogsSearchForm');
    const searchResults = document.getElementById('searchResults');

    // Handle order changes
    document.querySelectorAll('.order-select').forEach(select => {
        select.addEventListener('change', async function() {
            const recordId = this.dataset.recordId;
            const newOrder = this.value;
            
            try {
                const response = await fetch(`/blog/admin/featured/${recordId}/order`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ order: newOrder })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    M.toast({html: 'Order updated'});
                    setTimeout(() => window.location.reload(), 500);
                } else {
                    throw new Error(data.error || 'Error updating order');
                }
            } catch (error) {
                console.error('Error:', error);
                M.toast({html: error.message || 'Error updating order'});
                // Reset select to previous value
                this.value = this.querySelector('[selected]').value;
            }
        });
    });

    // Handle edit button clicks
    document.querySelectorAll('.edit-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const modal = M.Modal.getInstance(document.getElementById('addRecordModal'));
            const data = this.dataset;
            
            // Update form for editing
            modalTitle.textContent = 'Edit Featured Record';
            submitText.textContent = 'Update Record';
            formMethod.value = 'PUT';
            recordIdInput.value = data.recordId;
            
            // Fill form fields
            document.getElementById('title').value = data.title;
            document.getElementById('artist').value = data.artist;
            document.getElementById('description').value = data.description;
            document.getElementById('link').value = data.link;
            
            // Update select
            const orderSelect = document.getElementById('orderSelect');
            orderSelect.value = data.order;
            M.FormSelect.init(orderSelect);
            
            // Make album art optional for editing
            albumArtInput.removeAttribute('required');
            
            // Update Materialize form fields
            M.updateTextFields();
            M.textareaAutoResize(document.getElementById('description'));
            
            modal.open();
        });
    });

    // Reset form when adding new record
    document.querySelector('[href="#addRecordModal"]').addEventListener('click', function() {
        modalTitle.textContent = 'Add Featured Record';
        submitText.textContent = 'Add Record';
        formMethod.value = 'POST';
        recordIdInput.value = '';
        form.reset();
        albumArtInput.setAttribute('required', '');
        
        // Reinitialize select
        setTimeout(() => {
            M.FormSelect.init(document.getElementById('orderSelect'));
        }, 100);
    });

    // Handle record removal
    document.querySelectorAll('.remove-btn').forEach(btn => {
        btn.addEventListener('click', async function() {
            if (!confirm('Are you sure you want to remove this record?')) return;
            
            const recordId = this.dataset.recordId;
            const card = document.querySelector(`[data-record-id="${recordId}"]`);
            
            try {
                const response = await fetch(`/blog/admin/featured/${recordId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const data = await response.json();
                
                if (data.success) {
                    M.toast({html: 'Record removed'});
                    card.style.opacity = '0';
                    setTimeout(() => {
                        card.remove();
                        if (document.querySelectorAll('.featured-records .record-card').length === 0) {
                            window.location.reload();
                        }
                    }, 300);
                } else {
                    throw new Error(data.error || 'Error removing record');
                }
            } catch (error) {
                console.error('Error:', error);
                M.toast({html: error.message || 'Error removing record'});
            }
        });
    });

    // Handle Discogs search
    discogsSearchForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const query = document.getElementById('discogsQuery').value.trim();
        
        if (!query) return;
        
        searchResults.innerHTML = '<div class="progress"><div class="indeterminate"></div></div>';
        
        try {
            const response = await fetch(`/blog/admin/featured/search-discogs?q=${encodeURIComponent(query)}`);
            const data = await response.json();
            
            if (data.error) {
                throw new Error(data.error);
            }
            
            if (data.results && data.results.length > 0) {
                let resultsHTML = '';
                
                data.results.forEach(result => {
                    resultsHTML += `
                        <div class="col s12 m6 l4">
                            <div class="card">
                                <div class="card-image">
                                    <img src="${result.thumb || '/images/default-album.png'}" alt="${result.title}">
                                </div>
                                <div class="card-content">
                                    <span class="card-title truncate" title="${result.title}">${result.title}</span>
                                    <p class="truncate" title="${result.artist}">${result.artist}</p>
                                    <p class="grey-text">${result.year || 'Unknown year'}</p>
                                </div>
                                <div class="card-action">
                                    <button class="btn waves-effect waves-light blue add-from-discogs" 
                                            data-release-id="${result.id}">
                                        Add
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;
                });
                
                searchResults.innerHTML = resultsHTML;
                
                // Add event listeners to the "Add" buttons
                document.querySelectorAll('.add-from-discogs').forEach(btn => {
                    btn.addEventListener('click', async function() {
                        const releaseId = this.dataset.releaseId;
                        this.disabled = true;
                        this.textContent = 'Adding...';
                        
                        try {
                            const response = await fetch('/blog/admin/featured/add-from-discogs', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ releaseId })
                            });
                            
                            const data = await response.json();
                            
                            if (data.success) {
                                M.toast({html: data.message || 'Record added to heavy rotation'});
                                setTimeout(() => window.location.reload(), 1000);
                            } else {
                                throw new Error(data.error || 'Error adding record');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            M.toast({html: error.message || 'Error adding record'});
                            this.disabled = false;
                            this.textContent = 'Add';
                        }
                    });
                });
            } else {
                searchResults.innerHTML = '<div class="col s12"><div class="card-panel">No results found</div></div>';
            }
        } catch (error) {
            console.error('Error:', error);
            searchResults.innerHTML = `<div class="col s12"><div class="card-panel red lighten-4 red-text text-darken-4">Error: ${error.message || 'Failed to search Discogs'}</div></div>`;
        }
    });
});
</script>

<%- include('../../partials/footer') %>
